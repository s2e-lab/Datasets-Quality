[{"nl": "decode a hex string '4a4b4c' to UTF-8", "Heuristic": ["H1"]}, {"nl": "check if all elements in list `myList` are identica", "Heuristic": ["H1"]}, {"nl": "format number of spaces between strings `Python`, `:` and `Very Good` to be `20", "Heuristic": ["H1"]}, {"nl": "convert a string `d` from CP-1251 to UTF-", "Heuristic": ["H1"]}, {"nl": "get rid of None values in dictionary `kwargs", "Heuristic": ["H1"]}, {"nl": "get rid of None values in dictionary `kwargs", "Heuristic": ["H1"]}, {"nl": "capture final output of a chain of system commands `ps -ef | grep something | wc -l", "Heuristic": ["H1"]}, {"nl": "concatenate a list of strings `['a', 'b', 'c']", "Heuristic": ["H1"]}, {"nl": "find intersection data between series `s1` and series `s2", "Heuristic": ["H1"]}, {"nl": "sending http headers to `client", "Heuristic": ["H1"]}, {"nl": "Format a datetime string `when` to extract date onl", "Heuristic": ["H1"]}, {"nl": "split a multi-line string `inputString` into separate string", "Heuristic": ["H1"]}, {"nl": "Split a multi-line string ` a \\n b \\r\\n c ` by new line character `\\n", "Heuristic": []}, {"nl": ":", "Heuristic": ["H1", "H2"]}, {"nl": "Calculate sum over all rows of 2D numpy array `a", "Heuristic": ["H1"]}, {"nl": "enable warnings using action 'always", "Heuristic": ["H1"]}, {"nl": "concatenate items of list `l` with a space ' ", "Heuristic": ["H1"]}, {"nl": "parse a time string '30/03/09 16:31:32.123' containing milliseconds in i", "Heuristic": ["H1"]}, {"nl": "convert a string `my_string` with dot and comma into a float number `my_float", "Heuristic": ["H1"]}, {"nl": "convert a string `123,456.908` with dot and comma into a floating numbe", "Heuristic": ["H1"]}, {"nl": "set python path '/path/to/whatever' in python scrip", "Heuristic": ["H1"]}, {"nl": "split string 'Words, words, words.' using a regex '(\\\\W+)", "Heuristic": ["H1"]}, {"nl": "open a file `Output.txt` in append mod", "Heuristic": ["H1"]}, {"nl": "http://www.example.com/songs/mp3.mp3\" over HTTP and save to \"mp3.mp3", "Heuristic": []}, {"nl": "download a file 'http://www.example.com/' over HTT", "Heuristic": ["H1"]}, {"nl": "download a file `url` over HTT", "Heuristic": ["H1"]}, {"nl": "10MB", "Heuristic": ["H1", "H2"]}, {"nl": "argparse add argument with flag '--version' and version action of '%(prog)s 2.0' to parser `parser", "Heuristic": ["H1"]}, {"nl": "remove key 'c' from dictionary `d", "Heuristic": ["H1"]}, {"nl": "key", "Heuristic": ["H2"]}, {"nl": "Split a string `s` by space with `4` split", "Heuristic": []}, {"nl": "enable debug mode on Flask application `app", "Heuristic": ["H1"]}, {"nl": "python save list `mylist` to file object 'save.txt", "Heuristic": ["H1"]}, {"nl": "Multiply a matrix `P` with a 3d tensor `T` in scip", "Heuristic": ["H1"]}, {"nl": "Create 3d array of zeroes of size `(3,3,3)", "Heuristic": []}, {"nl": "cut off the last word of a sentence `content", "Heuristic": ["H1"]}, {"nl": "convert scalar `x` to arra", "Heuristic": ["H1"]}, {"nl": "sum all elements of nested list `L", "Heuristic": ["H1"]}, {"nl": "convert hex string '470FC614' to a float numbe", "Heuristic": ["H1"]}, {"nl": "Multiple each value by `2` for all keys in a dictionary `my_dict", "Heuristic": []}, {"nl": "running bash script 'sleep.sh", "Heuristic": ["H1"]}, {"nl": "Join elements of list `l` with a comma `,", "Heuristic": []}, {"nl": "make a comma-separated string from a list `myList", "Heuristic": ["H1"]}, {"nl": "reverse the list that contains 1 to 1", "Heuristic": ["H1"]}, {"nl": "remove substring 'bag,' from a string 'lamp, bag, mirror", "Heuristic": ["H1"]}, {"nl": "Reverse the order of words, delimited by `.`, in string `s", "Heuristic": []}, {"nl": "convert epoch time represented as milliseconds `s` to string using format '%Y-%m-%d %H:%M:%S.%f", "Heuristic": ["H1"]}, {"nl": "parse milliseconds epoch time '1236472051807' to format '%Y-%m-%d %H:%M:%S", "Heuristic": ["H1"]}, {"nl": "get the date 7 days before the current dat", "Heuristic": ["H1"]}, {"nl": "sum elements at index `column` of each list in list `data", "Heuristic": ["H1"]}, {"nl": "sum columns of a list `array", "Heuristic": ["H1"]}, {"nl": "encode binary string 'your string' to base64 cod", "Heuristic": ["H1"]}, {"nl": "combine list of dictionaries `dicts` with the same keys in each list to a single dictionar", "Heuristic": ["H1"]}, {"nl": "Merge a nested dictionary `dicts` into a flat dictionary by concatenating nested values with the same key `k", "Heuristic": ["H1"]}, {"nl": "get the url parameter 'myParam' in a Flask vie", "Heuristic": ["H1"]}, {"nl": "identify duplicate values in list `mylist", "Heuristic": ["H1"]}, {"nl": "Insert a 'None' value into a SQLite3 table", "Heuristic": []}, {"nl": "flatten list `list_of_menuitems", "Heuristic": ["H1"]}, {"nl": "append elements of a set `b` to a list `a", "Heuristic": ["H1"]}, {"nl": "Split a string `x` by last occurrence of character `-", "Heuristic": []}, {"nl": "get the last part of a string before the character '-", "Heuristic": ["H1"]}, {"nl": "upload file using FT", "Heuristic": ["H1"]}, {"nl": "create array containing the maximum value of respective elements of array `[2, 3, 4]` and array `[1, 5, 2]", "Heuristic": ["H1"]}, {"nl": "print a list `l` and move first 3 elements to the end of the lis", "Heuristic": ["H1"]}, {"nl": "create a random list of integer", "Heuristic": ["H1"]}, {"nl": "Using %f with strftime() in Python to get microsecond", "Heuristic": ["H1"]}, {"nl": "filter rows in pandas starting with alphabet 'f' using regular expression", "Heuristic": ["H1"]}, {"nl": "print a 2 dimensional list `tab` as a table with delimiter", "Heuristic": ["H1"]}, {"nl": "pandas: delete rows in dataframe `df` based on multiple columns value", "Heuristic": ["H1"]}, {"nl": "format the variables `goals` and `penalties` using string formattin", "Heuristic": ["H1"]}, {"nl": "({} goals, ${})", "Heuristic": []}, {"nl": "convert list of lists `L` to list of integer", "Heuristic": ["H1"]}, {"nl": "convert a list of lists `L` to list of integer", "Heuristic": ["H1"]}, {"nl": "write the elements of list `lines` concatenated by special character '\\n' to file `myfile", "Heuristic": ["H1"]}, {"nl": "Remove duplicate words from a string `text` using rege", "Heuristic": ["H1"]}, {"nl": "count non zero values in each column in pandas data frame `df", "Heuristic": ["H1"]}, {"nl": "search for string that matches regular expression pattern '(?<!Distillr)\\\\\\\\AcroTray\\\\.exe' in string 'C:\\\\SomeDir\\\\AcroTray.exe", "Heuristic": ["H1"]}, {"nl": "split string 'QH QD JC KD JS' into a list on white space", "Heuristic": ["H1"]}, {"nl": "search for occurrences of regex pattern '>.*<' in xml string `line", "Heuristic": ["H1"]}, {"nl": "erase all the contents of a file `filename", "Heuristic": ["H1"]}, {"nl": "convert a string `string_date` into datetime using the format '%Y-%m-%d %H:%M:%S.%f", "Heuristic": ["H1"]}, {"nl": "find the index of a list with the first element equal to '332' within the list of lists `thelist", "Heuristic": ["H1"]}, {"nl": "lower a string `text` and remove non-alphanumeric characters aside from spac", "Heuristic": ["H1"]}, {"nl": "remove all non-alphanumeric characters except space from a string `text` and lower i", "Heuristic": ["H1"]}, {"nl": "subscript text 'H20' with '2' as subscripted in matplotlib labels for arrays 'x' and 'y'", "Heuristic": ["H1"]}, {"nl": "subscript text 'H20' with '2' as subscripted in matplotlib labels for arrays 'x' and 'y'", "Heuristic": ["H1"]}, {"nl": "loop over a list `mylist` if sublists length equals ", "Heuristic": ["H1"]}, {"nl": "initialize a list `lst` of 100 objects Object(", "Heuristic": ["H1"]}, {"nl": "joining data from dataframe `df1` with data from dataframe `df2` based on matching values of column 'Date_Time' in both dataframe", "Heuristic": ["H1"]}, {"nl": "use `%s` operator to print variable values `str1` inside a strin", "Heuristic": ["H1"]}, {"nl": "Split a string '2.MATCHES $$TEXT$$ STRING' by a delimiter '$$TEXT$$", "Heuristic": ["H1"]}, {"nl": "check if directory `directory ` exists and create it if necessar", "Heuristic": ["H1"]}, {"nl": "check if a directory `path` exists and create it if necessar", "Heuristic": ["H1"]}, {"nl": "check if a directory `path` exists and create it if necessar", "Heuristic": ["H1"]}, {"nl": "Replace a separate word 'H3' by 'H1' in a string 'text", "Heuristic": ["H1"]}, {"nl": "substitute ASCII letters in string 'aas30dsa20' with empty string '", "Heuristic": ["H1"]}, {"nl": "get digits only from a string `aas30dsa20` using lambda functio", "Heuristic": ["H1"]}, {"nl": "name", "Heuristic": ["H2"]}, {"nl": "Create new matrix object  by concatenating data from matrix A and matrix ", "Heuristic": ["H1"]}, {"nl": "concat two matrices `A` and `B` in nump", "Heuristic": ["H1"]}, {"nl": "Get the characters count in a file `filepath", "Heuristic": ["H1"]}, {"nl": "a", "Heuristic": ["H2"]}, {"nl": "count the occurrences of items in list `l", "Heuristic": ["H1"]}, {"nl": "count the occurrences of items in list `l", "Heuristic": ["H1"]}, {"nl": "count the occurrences of items in list `l", "Heuristic": ["H1"]}, {"nl": "b", "Heuristic": ["H2"]}, {"nl": "copy file `srcfile` to directory `dstdir", "Heuristic": ["H1"]}, {"nl": "find the key associated with the largest value in dictionary `x` whilst key is non-zero valu", "Heuristic": ["H1"]}, {"nl": "Put the curser at beginning of the fil", "Heuristic": ["H1"]}, {"nl": "combine values from column 'b' and column 'a' of dataframe `df`  into column 'c' of datafram `df", "Heuristic": ["H1"]}, {"nl": "remove key 'ele' from dictionary `d", "Heuristic": ["H1"]}, {"nl": "merge list `['it']` and list `['was']` and list `['annoying']` into one lis", "Heuristic": ["H1"]}, {"nl": "increment a value with leading zeroes in a number `x", "Heuristic": ["H1"]}, {"nl": "check if a pandas dataframe `df`'s index is sorte", "Heuristic": ["H1"]}, {"nl": "Convert tuple `t` to lis", "Heuristic": ["H1"]}, {"nl": "Convert list `t` to tupl", "Heuristic": ["H1"]}, {"nl": "Convert tuple `level1` to lis", "Heuristic": ["H1"]}, {"nl": "send the output of pprint object `dataobject` to file `logFile", "Heuristic": ["H1"]}, {"nl": "get index of rows in column 'BoolCol", "Heuristic": ["H1"]}, {"nl": "Create a list containing the indexes of rows where the value of column 'BoolCol' in dataframe `df` are equal to Tru", "Heuristic": ["H1"]}, {"nl": "from dataframe `df` get list of indexes of rows where column 'BoolCol' values match Tru", "Heuristic": ["H1"]}, {"nl": "get index of rows in dataframe `df` which column 'BoolCol' matches value Tru", "Heuristic": ["H1"]}, {"nl": "change working directory to the directory `owd", "Heuristic": ["H1"]}, {"nl": "insert data from a string `testfield` to sqlite db `c", "Heuristic": ["H1"]}, {"nl": "\\\\x89\\\\n", "Heuristic": ["H2"]}, {"nl": "convert a raw string `raw_string` into a normal strin", "Heuristic": ["H1"]}, {"nl": "convert a raw string `raw_byte_string` into a normal strin", "Heuristic": ["H1"]}, {"nl": "split a string `s` with into all strings of repeated character", "Heuristic": ["H1"]}, {"nl": "scatter a plot with x, y position of `np.random.randn(100)` and face color equal to non", "Heuristic": ["H1"]}, {"nl": "do a scatter plot with empty circle", "Heuristic": ["H1"]}, {"nl": "remove a div from `soup` with a id `main-content` using beautifulsou", "Heuristic": ["H1"]}, {"nl": "filter rows of datafram `df` containing key word `ball` in column `ids", "Heuristic": ["H1"]}, {"nl": "convert index at level 0 into a column in dataframe `df", "Heuristic": ["H1"]}, {"nl": "Add indexes in a data frame `df` to a column `index1", "Heuristic": ["H1"]}, {"nl": "convert pandas index in a dataframe `df` to column", "Heuristic": ["H1"]}, {"nl": "Get reverse of list items from list 'b' using extended slicin", "Heuristic": ["H1"]}, {"nl": "join each element in array `a` with element at the same index in array `b` as a tupl", "Heuristic": ["H1"]}, {"nl": "zip two 2-d arrays `a` and `b", "Heuristic": ["H1"]}, {"nl": "convert list `list_of_ints` into a comma separated strin", "Heuristic": ["H1"]}, {"nl": "Send a post request with raw data `DATA` and basic authentication with `username` and `password", "Heuristic": []}, {"nl": "abcd}def}", "Heuristic": ["H1", "H2"]}, {"nl": "Iterate ove list `[1, 2, 3]` using list comprehensio", "Heuristic": ["H1"]}, {"nl": "extract all the values with keys 'x' and 'y' from a list of dictionaries `d` to list of tuple", "Heuristic": ["H1"]}, {"nl": "get the filename without the extension from file 'hemanth.txt", "Heuristic": ["H1"]}, {"nl": "create a list containing flattened list `[['A', 'B', 'C'], ['D', 'E', 'F'], ['G', 'H', 'I']]", "Heuristic": ["H1"]}, {"nl": "select rows in a dataframe `df` column 'closing_price' between two values 99 and 10", "Heuristic": ["H1"]}, {"nl": "replace all occurences of newlines `\\n` with `<br>` in dataframe `df", "Heuristic": ["H1"]}, {"nl": "replace all occurrences of a string `\\n` by string `<br>` in a pandas data frame `df", "Heuristic": ["H1"]}, {"nl": "create a list containing each two adjacent letters in string `word` as its element", "Heuristic": ["H1"]}, {"nl": "Get a list of pairs from a string `word` using lambda functio", "Heuristic": ["H1"]}, {"nl": "extract a url from a string `myString", "Heuristic": ["H1"]}, {"nl": "extract a url from a string `myString", "Heuristic": ["H1"]}, {"nl": "remove all special characters, punctuation and spaces from a string `mystring` using rege", "Heuristic": ["H1"]}, {"nl": "create a DatetimeIndex containing 13 periods of the second friday of each month starting from date '2016-01-01", "Heuristic": ["H1"]}, {"nl": "Create multidimensional array `matrix` with 3 rows and 2 columns in pytho", "Heuristic": ["H1"]}, {"nl": "replace spaces with underscore in string `mystring", "Heuristic": ["H1"]}, {"nl": "split string `my_string` on white space", "Heuristic": ["H1"]}, {"nl": "get filename without extension from file `filename", "Heuristic": ["H1"]}, {"nl": "get a list containing the sum of each element `i` in list `l` plus the previous element", "Heuristic": ["H1"]}, {"nl": "split a string `Docs/src/Scripts/temp` by `/` keeping `/` in the resul", "Heuristic": ["H1"]}, {"nl": "shuffle columns of an numpy array 'r", "Heuristic": ["H1"]}, {"nl": "copy all values in a column 'B' to a new column 'D' in a pandas data frame 'df", "Heuristic": ["H1"]}, {"nl": "find a value within nested json 'data' where the key inside another key 'B' is unknown", "Heuristic": ["H1"]}, {"nl": "check characters of string `string` are true predication of function `predicate", "Heuristic": ["H1"]}, {"nl": "determine number of files on a drive with pytho", "Heuristic": ["H1"]}, {"nl": "how to get a single result from a SQLite query from `cursor", "Heuristic": ["H1"]}, {"nl": "convert string `user_input` into a list of integers `user_list", "Heuristic": ["H1"]}, {"nl": "Get a list of integers by splitting  a string `user` with comm", "Heuristic": ["H1"]}, {"nl": "Sorting a Python list `list` by the first item ascending and last item descendin", "Heuristic": ["H1"]}, {"nl": "sort a list of objects `ut`, based on a function `cmpfun` in descending orde", "Heuristic": ["H1"]}, {"nl": "reverse list `ut` based on the `count` attribute of each objec", "Heuristic": ["H1"]}, {"nl": "cast an int `i` to a string and concat to string 'ME", "Heuristic": ["H1"]}, {"nl": "Sorting data in Pandas DataFrame `df` with columns 'System_num' and 'Dis", "Heuristic": ["H1"]}, {"nl": "prepend the line '#test firstline\\n' to the contents of file 'infile' and save as the file 'outfile", "Heuristic": ["H1"]}, {"nl": "sort a list `l` by length of value in tupl", "Heuristic": ["H1"]}, {"nl": "split string `s` by words that ends with 'd", "Heuristic": ["H1"]}, {"nl": "return `True` if string `foobarrrr` contains regex `ba[rzd]", "Heuristic": ["H1"]}, {"nl": "Removing duplicates in list `t", "Heuristic": []}, {"nl": "Removing duplicates in list `source_list", "Heuristic": []}, {"nl": "Removing duplicates in list `abracadabra", "Heuristic": []}, {"nl": "Convert array `a` into a lis", "Heuristic": ["H1"]}, {"nl": "Convert the first row of numpy matrix `a` to a lis", "Heuristic": ["H1"]}, {"nl": "In `soup`, get the content of the sibling of the `td`  tag with text content `Address:", "Heuristic": ["H1"]}, {"nl": "convert elements of each tuple in list `l` into a string  separated by character `@", "Heuristic": ["H1"]}, {"nl": "convert each tuple in list `l` to a string with '@' separating the tuples' element", "Heuristic": ["H1"]}, {"nl": "Get all matches with regex pattern `\\\\d+[xX]` in list of string `teststr", "Heuristic": ["H1"]}, {"nl": "select values from column 'A' for which corresponding values in column 'B' will be greater than 50, and in column 'C' - equal 900 in dataframe `df", "Heuristic": ["H1"]}, {"nl": "Sort dictionary `o` in ascending order based on its keys and item", "Heuristic": []}, {"nl": "get sorted list of keys of dict `d", "Heuristic": ["H1"]}, {"nl": "sort dictionaries `d` by key", "Heuristic": ["H1"]}, {"nl": "1", "Heuristic": ["H2"]}, {"nl": "convert items in `T1` to integer", "Heuristic": ["H1"]}, {"nl": "call a shell script `./test.sh` using subproces", "Heuristic": ["H1"]}, {"nl": "call a shell script `notepad` using subproces", "Heuristic": ["H1"]}, {"nl": "combine lists `l1` and `l2`  by alternating their element", "Heuristic": ["H1"]}, {"nl": "encode string 'data to be encoded", "Heuristic": ["H1"]}, {"nl": "encode a string `data to be encoded` to `ascii` encodin", "Heuristic": ["H1"]}, {"nl": "parse tab-delimited CSV file 'text.txt' into a lis", "Heuristic": ["H1"]}, {"nl": "Get attribute `my_str` of object `my_object", "Heuristic": ["H1"]}, {"nl": "group a list of dicts `LD` into one dict by ke", "Heuristic": ["H1"]}, {"nl": "sum the first value in each tuple in a list of tuples `list_of_pairs` in pytho", "Heuristic": ["H1"]}, {"nl": "{'code1':1,'code2':1}", "Heuristic": ["H2"]}, {"nl": "find all words in a string `mystring` that start with the `$` sig", "Heuristic": ["H1"]}, {"nl": "remove any url within string `text", "Heuristic": ["H1"]}, {"nl": "replace all elements in array `A` that are not present in array `[1, 3, 4]` with zero", "Heuristic": ["H1"]}, {"nl": "calculate mean across dimension in a 2d array `a", "Heuristic": ["H1"]}, {"nl": "running r script '/pathto/MyrScript.r' from pytho", "Heuristic": ["H1"]}, {"nl": "run r script '/usr/bin/Rscript --vanilla /pathto/MyrScript.r", "Heuristic": ["H1"]}, {"nl": "replacing nan in the dataframe `df` with row averag", "Heuristic": ["H1"]}, {"nl": "Convert unix timestamp '1347517370' to formatted string '%Y-%m-%d %H:%M:%S", "Heuristic": ["H1"]}, {"nl": "selecting rows in Numpy ndarray 'a', where the value in the first column is 0 and value in the second column is ", "Heuristic": ["H1"]}, {"nl": "separate words delimited by one or more spaces into a lis", "Heuristic": ["H1"]}, {"nl": "length of longest element in list `words", "Heuristic": ["H1"]}, {"nl": "get the value associated with unicode key 'from_user' of first dictionary in list `result", "Heuristic": ["H1"]}, {"nl": "Retrieve each line from a file 'File.txt' as a lis", "Heuristic": ["H1"]}, {"nl": "swap keys with values in a dictionary `a", "Heuristic": ["H1"]}, {"nl": "Open a file `path/to/FILE_NAME.ext` in write mod", "Heuristic": []}, {"nl": "count distinct values in a column 'col3' of a pandas dataframe `df` group by objects in 'col1' and 'col2", "Heuristic": ["H1"]}, {"nl": "Check if any key in the dictionary `dict1` starts with the string `EMP$$", "Heuristic": ["H1"]}, {"nl": "create list of values from dictionary `dict1` that have a key that starts with 'EMP$$", "Heuristic": ["H1"]}, {"nl": "convert a pandas series `sf` into a pandas dataframe `df` with columns `email` and `list", "Heuristic": ["H1"]}, {"nl": "concatenate elements of list `list` by tabs `\t", "Heuristic": ["H1"]}, {"nl": "print unicode string '\\xd0\\xbf\\xd1\\x80\\xd0\\xb8' with utf-", "Heuristic": ["H1"]}, {"nl": "Encode a latin character in string `Sopet\\xc3\\xb3n` properl", "Heuristic": ["H1"]}, {"nl": "n", "Heuristic": ["H2"]}, {"nl": "display the float `1/3*100` as a percentag", "Heuristic": ["H1"]}, {"nl": "sort a list of dictionary `mylist` by the key `title", "Heuristic": ["H1"]}, {"nl": "sort a list `l` of dicts by dict value 'title", "Heuristic": ["H1"]}, {"nl": "sort a list of dictionaries by the value of keys 'title', 'title_url', 'id' in ascending order", "Heuristic": ["H1"]}, {"nl": "find 10 largest differences between each respective elements of list `l1` and list `l2", "Heuristic": ["H1"]}, {"nl": "BeautifulSoup find all 'span' elements in HTML string `soup` with class of 'starGryB sp", "Heuristic": ["H1"]}, {"nl": "write records in dataframe `df` to table 'test' in schema 'a_schema' with `engine", "Heuristic": ["H1"]}, {"nl": "Extract brackets from string `s", "Heuristic": []}, {"nl": "remove duplicate elements from list 'L", "Heuristic": ["H1"]}, {"nl": "read a file `file` without newline", "Heuristic": ["H1"]}, {"nl": "get the position of item 1 in `testlist", "Heuristic": ["H1"]}, {"nl": "get the position of item 1 in `testlist", "Heuristic": ["H1"]}, {"nl": "get the position of item `element` in list `testlist", "Heuristic": ["H1"]}, {"nl": "find the first element of the tuple with the maximum second element in a list of tuples `lis", "Heuristic": ["H1"]}, {"nl": "get the item at index 0 from the tuple that has maximum value at index 1 in list `lis", "Heuristic": ["H1"]}, {"nl": "Make a delay of 1 secon", "Heuristic": ["H1"]}, {"nl": "convert list of tuples `L` to a strin", "Heuristic": ["H1"]}, {"nl": "Django set default value of field `b` equal to '0000000", "Heuristic": []}, {"nl": "Sort lis `list5` in ascending order based on the degrees value of its element", "Heuristic": ["H1"]}, {"nl": "convert a list `l` into a generator objec", "Heuristic": ["H1"]}, {"nl": "remove elements from list `oldlist` that have an index number mentioned in list `removelist", "Heuristic": ["H1"]}, {"nl": "Open a file `yourfile.txt` in write mod", "Heuristic": []}, {"nl": "get attribute 'attr' from object `obj", "Heuristic": ["H1"]}, {"nl": "convert tuple of tuples `(('aa',), ('bb',), ('cc',))` to tupl", "Heuristic": ["H1"]}, {"nl": "convert tuple of tuples `(('aa',), ('bb',), ('cc',))` to list in one lin", "Heuristic": ["H1"]}, {"nl": "replace a characters in a column of a dataframe `df", "Heuristic": ["H1"]}, {"nl": "unzip the list `[('a', 1), ('b', 2), ('c', 3), ('d', 4)]", "Heuristic": ["H1"]}, {"nl": "unzip list `original", "Heuristic": ["H1"]}, {"nl": "unzip list `original` and return a generato", "Heuristic": ["H1"]}, {"nl": "unzip list `[('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e', )]", "Heuristic": ["H1"]}, {"nl": "unzip list `[('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e', )]` and fill empty results with Non", "Heuristic": ["H1"]}, {"nl": "encode `Decimal('3.9')` to a JSON strin", "Heuristic": ["H1"]}, {"nl": "mynewkey\" to dictionary `d` with value \"mynewvalue", "Heuristic": ["H1"]}, {"nl": "Add key 'a' to dictionary `data` with value ", "Heuristic": []}, {"nl": "Add key 'a' to dictionary `data` with value ", "Heuristic": []}, {"nl": "Add key 'a' to dictionary `data` with value ", "Heuristic": []}, {"nl": "find maximal value in matrix `matrix", "Heuristic": ["H1"]}, {"nl": "Round number `answer` to 2 precision after the decimal poin", "Heuristic": ["H1"]}, {"nl": "extract ip address `ip` from an html string `s", "Heuristic": ["H1"]}, {"nl": "filter dataframe `df` by values in column `A` that appear more than onc", "Heuristic": ["H1"]}, {"nl": "append each line in file `myfile` into a lis", "Heuristic": ["H1"]}, {"nl": "Get a list of integers `lst` from a file `filename.txt", "Heuristic": ["H1"]}, {"nl": "add color bar with image `mappable` to plot `plt", "Heuristic": ["H1"]}, {"nl": "count most frequent 100 words in column 'text' of dataframe `df", "Heuristic": ["H1"]}, {"nl": "generate all 2-element subsets of tuple `(1, 2, 3)", "Heuristic": ["H1"]}, {"nl": "get a value of datetime.today() in the UTC time zon", "Heuristic": ["H1"]}, {"nl": "Get a new list `list2`by removing empty list from a list of lists `list1", "Heuristic": []}, {"nl": "Create `list2` to contain the lists from list `list1` excluding the empty lists from `list1", "Heuristic": []}, {"nl": "Django response with JSON `data", "Heuristic": []}, {"nl": "get all text that is not enclosed within square brackets in string `example_str", "Heuristic": ["H1"]}, {"nl": "Use a regex to get all text in a string `example_str` that is not surrounded by square bracket", "Heuristic": ["H1"]}, {"nl": "get whatever is between parentheses as a single match, and any char outside as an individual match in string '(zyx)bc", "Heuristic": ["H1"]}, {"nl": "match regex '\\\\((.*?)\\\\)|(\\\\w)' with string '(zyx)bc", "Heuristic": ["H1"]}, {"nl": "match multiple regex patterns with the alternation operator `|` in a string `(zyx)bc", "Heuristic": ["H1"]}, {"nl": "formate each string cin list `elements` into pattern '%{0}%", "Heuristic": ["H1"]}, {"nl": "Open a background process 'background-process' with arguments 'arguments", "Heuristic": []}, {"nl": "get list of values from dictionary 'mydict' w.r.t. list of keys 'mykeys", "Heuristic": ["H1"]}, {"nl": "convert list `[('Name', 'Joe'), ('Age', 22)]` into a dictionar", "Heuristic": ["H1"]}, {"nl": "average each two columns of array `data", "Heuristic": ["H1"]}, {"nl": "double backslash escape all double quotes in string `s", "Heuristic": ["H1"]}, {"nl": "split a string `s` into a list of words and whitespac", "Heuristic": ["H1"]}, {"nl": "plotting stacked barplots on a panda data frame `df", "Heuristic": ["H1"]}, {"nl": "reverse the keys and values in a dictionary `myDictionary", "Heuristic": ["H1"]}, {"nl": "finding the index of elements containing substring 'how' and 'what' in a list of strings 'myList'", "Heuristic": ["H1"]}, {"nl": "check if object `obj` is a strin", "Heuristic": ["H1"]}, {"nl": "check if object `o` is a strin", "Heuristic": ["H1"]}, {"nl": "check if object `o` is a strin", "Heuristic": ["H1"]}, {"nl": "check if `obj_to_test` is a strin", "Heuristic": ["H1"]}, {"nl": "append list `list1` to `list2", "Heuristic": ["H1"]}, {"nl": "append list `mylog` to `list1", "Heuristic": ["H1"]}, {"nl": "append list `a` to `c", "Heuristic": ["H1"]}, {"nl": "append items in list `mylog` to `list1", "Heuristic": ["H1"]}, {"nl": "append a tuple of elements from list `a` with indexes '[0][0] [0][2]' to list `b", "Heuristic": ["H1"]}, {"nl": "Initialize `SECRET_KEY` in flask config with `Your_secret_string ", "Heuristic": []}, {"nl": "unpack a series of tuples in pandas `out` into a DataFrame with column names 'out-1' and 'out-2", "Heuristic": ["H1"]}, {"nl": "find the index of an element 'MSFT' in a list `stocks_list", "Heuristic": ["H1"]}, {"nl": "rotate the xtick `labels` of matplotlib plot `ax` by `45` degrees to make long labels readabl", "Heuristic": ["H1"]}, {"nl": "remove symbols from a string `s", "Heuristic": ["H1"]}, {"nl": "Find octal characters matches from a string `s` using rege", "Heuristic": ["H1"]}, {"nl": "split string `input` based on occurrences of regex pattern '[ ](?=[A-Z]+\\\\b)", "Heuristic": ["H1"]}, {"nl": "Split string `input` at every space followed by an upper-case lette", "Heuristic": ["H1"]}, {"nl": "send multipart encoded file `files` to url `url` with headers `headers` and metadata `data", "Heuristic": ["H1"]}, {"nl": "write bytes `bytes_` to a file `filename` in python ", "Heuristic": ["H1"]}, {"nl": "get a list from a list `lst` with values mapped into a dictionary `dct", "Heuristic": ["H1"]}, {"nl": "find duplicate names in column 'name' of the dataframe `x", "Heuristic": ["H1"]}, {"nl": "truncate float 1.923328437452 to 3 decimal place", "Heuristic": ["H1"]}, {"nl": "sort list `li` in descending order based on the date value in second element of each list in list `li", "Heuristic": ["H1"]}, {"nl": "place the radial ticks in plot `ax` at 135 degree", "Heuristic": ["H1"]}, {"nl": "check if path `my_path` is an absolute pat", "Heuristic": ["H1"]}, {"nl": "get number of keys in dictionary `yourdict", "Heuristic": ["H1"]}, {"nl": "count the number of keys in dictionary `yourdictfile", "Heuristic": ["H1"]}, {"nl": "pandas dataframe `df` get first row of each group by 'id", "Heuristic": ["H1"]}, {"nl": "split a list in first column into multiple columns keeping other columns as well in pandas data frame `df", "Heuristic": ["H1"]}, {"nl": "js/([^\"]*\\\\bjquery\\\\b[^\"]*)", "Heuristic": ["H1", "H2"]}, {"nl": "Sum integers contained in strings in list `['', '3.4', '', '', '1.0']", "Heuristic": ["H1"]}, {"nl": "Call a subprocess with arguments `c:\\\\Program Files\\\\VMware\\\\VMware Server\\\\vmware-cmd.bat` that may contain space", "Heuristic": ["H1"]}, {"nl": "reverse a priority queue `q` in python without using classe", "Heuristic": ["H1"]}, {"nl": "make a barplot of data in column `group` of dataframe `df` colour-coded according to list `color", "Heuristic": ["H1"]}, {"nl": "find all matches of regex pattern '([a-fA-F\\\\d]{32})' in string `data", "Heuristic": ["H1"]}, {"nl": "Get the length of list `my_list", "Heuristic": []}, {"nl": "Getting the length of array `l", "Heuristic": []}, {"nl": "Getting the length of array `s", "Heuristic": []}, {"nl": "Getting the length of `my_tuple", "Heuristic": []}, {"nl": "Getting the length of `my_string", "Heuristic": []}, {"nl": "\\\\a", "Heuristic": ["H2"]}, {"nl": "replace each 'a' with 'b' and each 'b' with 'a' in the string 'obama' in a single pass", "Heuristic": ["H1"]}, {"nl": "remove directory tree '/folder_name", "Heuristic": ["H1"]}, {"nl": "create a new column `weekday` in pandas data frame `data` based on the values in column `my_dt", "Heuristic": ["H1"]}, {"nl": "reverse sort Counter `x` by value", "Heuristic": ["H1"]}, {"nl": "reverse sort counter `x` by valu", "Heuristic": ["H1"]}, {"nl": "append a numpy array 'b' to a numpy array 'a", "Heuristic": ["H1"]}, {"nl": "numpy concatenate two arrays `a` and `b` along the first axi", "Heuristic": ["H1"]}, {"nl": "numpy concatenate two arrays `a` and `b` along the second axi", "Heuristic": ["H1"]}, {"nl": "numpy concatenate two arrays `a` and `b` along the first axi", "Heuristic": ["H1"]}, {"nl": "numpy concatenate two arrays `a` and `b` along the first axi", "Heuristic": ["H1"]}, {"nl": "fetch address information for host 'google.com' ion port 8", "Heuristic": ["H1"]}, {"nl": "add a column 'day' with value 'sat' to dataframe `df", "Heuristic": ["H1"]}, {"nl": "return a 401 unauthorized in djang", "Heuristic": ["H1"]}, {"nl": "Flask set folder 'wherever' as the default template folde", "Heuristic": ["H1"]}, {"nl": "sort a list of lists 'c2' such that third row comes firs", "Heuristic": ["H1"]}, {"nl": "sort a list of lists 'c2' in reversed row orde", "Heuristic": ["H1"]}, {"nl": "Sorting a list of lists `c2`, each by the third and second ro", "Heuristic": ["H1"]}, {"nl": "set font `Arial` to display non-ascii characters in matplotli", "Heuristic": ["H1"]}, {"nl": "Convert  DateTime column 'date' of pandas dataframe 'df' to ordina", "Heuristic": ["H1"]}, {"nl": "Get the integer location of a key `bob` in a pandas data frame `df", "Heuristic": ["H1"]}, {"nl": "add an item with key 'third_key' and value 1 to an dictionary `my_dict", "Heuristic": ["H1"]}, {"nl": "declare an array `my_list", "Heuristic": ["H1"]}, {"nl": "Insert item `12` to a list `my_list", "Heuristic": []}, {"nl": "add an entry 'wuggah' at the beginning of list `myList", "Heuristic": ["H1"]}, {"nl": "convert a hex-string representation `hex_str` to actual byte", "Heuristic": ["H1"]}, {"nl": "select the last column of dataframe `df", "Heuristic": ["H1"]}, {"nl": "get the first value from dataframe `df` where column 'Letters' is equal to 'C", "Heuristic": ["H1"]}, {"nl": "converting two lists `[1, 2, 3]` and `[4, 5, 6]` into a matri", "Heuristic": ["H1"]}, {"nl": "get the type of `i", "Heuristic": ["H1"]}, {"nl": "determine the type of variable `v", "Heuristic": ["H1"]}, {"nl": "determine the type of variable `v", "Heuristic": ["H1"]}, {"nl": "get the type of variable `variable_name", "Heuristic": ["H1"]}, {"nl": "get the 5th item of a generator `g", "Heuristic": ["H1"]}, {"nl": "return a string `word` with string forma", "Heuristic": ["H1"]}, {"nl": "join a list of strings `list` using a space ' ", "Heuristic": ["H1"]}, {"nl": "create list `y` containing two empty list", "Heuristic": ["H1"]}, {"nl": "read a file `filename` into a list `data", "Heuristic": ["H1"]}, {"nl": "delete all occurrences of character 'i' in string 'it is icy", "Heuristic": ["H1"]}, {"nl": "delete all instances of a character 'i' in a string 'it is icy", "Heuristic": ["H1"]}, {"nl": "i\" in string \"it is icy", "Heuristic": ["H1"]}, {"nl": "1", "Heuristic": ["H2"]}, {"nl": "get elements from list `myList`, that have a field `n` value 3", "Heuristic": ["H1"]}, {"nl": "converting list of strings `intstringlist` to list of integer `nums", "Heuristic": ["H1"]}, {"nl": ".", "Heuristic": ["H1", "H2"]}, {"nl": "round off the float that is the product of `2.52 * 100` and convert it to an in", "Heuristic": ["H1"]}, {"nl": "Find all files `files` in directory '/mydir' with extension '.txt", "Heuristic": ["H1"]}, {"nl": "/mydir\" with extension \".txt", "Heuristic": ["H1"]}, {"nl": "/mydir\" with extension \".txt", "Heuristic": ["H1"]}, {"nl": "plot dataframe `df` without a legen", "Heuristic": ["H1"]}, {"nl": "192.168.x.x", "Heuristic": ["H2"]}, {"nl": "Sum the corresponding decimal values for binary values of each boolean element in list `x", "Heuristic": []}, {"nl": "write multiple strings `line1`, `line2` and `line3` in one line in a file `target", "Heuristic": ["H1"]}, {"nl": "Convert list of lists `data` into a flat lis", "Heuristic": ["H1"]}, {"nl": "Print new line character as `\\n` in a string `foo\\nbar", "Heuristic": ["H1"]}, {"nl": "remove last comma character ',' in string `s", "Heuristic": ["H1"]}, {"nl": "calculate the mean of each element in array `x` with the element previous to i", "Heuristic": ["H1"]}, {"nl": "get an array of the mean of each two consecutive values in numpy array `x", "Heuristic": ["H1"]}, {"nl": "load data containing `utf-8` from file `new.txt` into numpy array `arr", "Heuristic": ["H1"]}, {"nl": "reverse sort list of dicts `l` by value for key `time", "Heuristic": ["H1"]}, {"nl": "Sort a list of dictionary `l` based on key `time` in descending orde", "Heuristic": ["H1"]}, {"nl": "get rows of dataframe `df` that match regex '(Hel|Just)", "Heuristic": ["H1"]}, {"nl": "[\" and \"]", "Heuristic": ["H1"]}, {"nl": "create a list of date string in 'yyyymmdd' format with Python Pandas from '20130226' to '20130302", "Heuristic": ["H1"]}, {"nl": "count number of times string 'brown' occurred in string 'The big brown fox is brown", "Heuristic": ["H1"]}, {"nl": "decode json string `request_body` to python dic", "Heuristic": ["H1"]}, {"nl": "download the file from url `url` and save it under file `file_name", "Heuristic": ["H1"]}, {"nl": "split string `text` by spac", "Heuristic": ["H1"]}, {"nl": ",", "Heuristic": ["H1", "H2"]}, {"nl": "Split string `line` into a list by whitespac", "Heuristic": ["H1"]}, {"nl": "replace dot characters  '.' associated with ascii letters in list `s` with space ' ", "Heuristic": ["H1"]}, {"nl": "sort list `list_of_strings` based on second index of each string `s", "Heuristic": ["H1"]}, {"nl": "eliminate non-integer items from list `lst", "Heuristic": ["H1"]}, {"nl": "get all the elements except strings from the list 'lst'", "Heuristic": ["H1"]}, {"nl": "Sort a list of dictionaries `list_to_be_sorted` by the value of the dictionary key `name", "Heuristic": []}, {"nl": "sort a list of dictionaries `l` by values in key `name` in descending orde", "Heuristic": ["H1"]}, {"nl": "sort a list of dictionaries `list_of_dicts` by `name` values of the dictionar", "Heuristic": ["H1"]}, {"nl": "sort a list of dictionaries `list_of_dicts` by `age` values of the dictionar", "Heuristic": ["H1"]}, {"nl": "sort a Dataframe `df` by the total ocurrences in a column 'scores' group by 'prots", "Heuristic": ["H1"]}, {"nl": ",", "Heuristic": ["H1", "H2"]}, {"nl": "concatenate array of strings `['A', 'B', 'C', 'D']` into a strin", "Heuristic": ["H1"]}, {"nl": "Remove all strings from a list a strings `sents` where the values starts with `@$\\t` or `#", "Heuristic": ["H1"]}, {"nl": "sort a list of dictionary `list` first by key `points` and then by `time", "Heuristic": ["H1"]}, {"nl": "convert datetime object `(1970, 1, 1)` to second", "Heuristic": ["H1"]}, {"nl": "insert `_suff` before the file extension in `long.file.name.jpg` or replace `_a` with `suff` if it precedes the extension", "Heuristic": ["H1"]}, {"nl": "reload a module `module", "Heuristic": ["H1"]}, {"nl": "Convert integer `number` into an unassigned intege", "Heuristic": ["H1"]}, {"nl": "convert int values in list `numlist` to floa", "Heuristic": ["H1"]}, {"nl": "write dataframe `df`, excluding index, to a csv file `filename", "Heuristic": ["H1"]}, {"nl": "convert a urllib unquoted string `unescaped` to a json data `json_data", "Heuristic": ["H1"]}, {"nl": "Create a list containing all ascii characters as its element", "Heuristic": ["H1"]}, {"nl": "write `newFileBytes` to a binary file `newFile", "Heuristic": ["H1"]}, {"nl": "python regex - check for a capital letter with a following lowercase in string `string", "Heuristic": ["H1"]}, {"nl": "get the last key of dictionary `dict", "Heuristic": ["H1"]}, {"nl": "hi there", "Heuristic": ["H1", "H2"]}, {"nl": "hi there", "Heuristic": ["H1", "H2"]}, {"nl": "Hello", "Heuristic": ["H2"]}, {"nl": "convert unicode string `s` to asci", "Heuristic": ["H1"]}, {"nl": "Find all numbers and dots from a string `text` using rege", "Heuristic": ["H1"]}, {"nl": "execute script 'script.ps1' using 'powershell.exe' shel", "Heuristic": ["H1"]}, {"nl": "Sort a list of tuples `b` by third item in the tupl", "Heuristic": ["H1"]}, {"nl": "create a datetime with the current date & tim", "Heuristic": ["H1"]}, {"nl": "get the index of an integer `1` from a list `lst` if the list also contains boolean item", "Heuristic": ["H1"]}, {"nl": "subtract 13 from every number in a list `a", "Heuristic": ["H1"]}, {"nl": "get the highest element in absolute value in a numpy matrix `x", "Heuristic": ["H1"]}, {"nl": "Get all urls within text `s", "Heuristic": ["H1"]}, {"nl": "split a string `mystring` considering the spaces ' ", "Heuristic": ["H1"]}, {"nl": "open file `path` with mode 'r", "Heuristic": ["H1"]}, {"nl": "sum elements at the same index in list `data", "Heuristic": ["H1"]}, {"nl": "add a new axis to array `a", "Heuristic": ["H1"]}]